---
import BaseHead from '../../components/BaseHead.astro'
import Header from '../../components/Header.astro'
import Footer from '../../components/Footer.astro'
import { SITE_TITLE, SITE_DESCRIPTION, ARCHIVE_TITLE } from '../../consts'
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'

import dayjs from 'dayjs'
import { formatUrl, getWordCount, baseUrl } from '../../utils/common.ts'
let formatPost: {
  [year: string]: { [month: string]: CollectionEntry<'blog'>[] }
} = {}
let formatStickyPost: {
  [year: string]: { [month: string]: CollectionEntry<'blog'>[] }
} = {}
;(await getCollection('blog'))?.forEach?.(item => {
  const year = dayjs(item.data.pubDate).get('y')
  const month = dayjs(item.data.pubDate).get('M') + 1
  if (!formatPost[year]) {
    formatPost[year] = {}
  }
  if (!Array.isArray(formatPost[year]?.[month])) {
    formatPost[year]![month] = []
  }
  if (typeof item.data.sticky === 'number') {
    if (!formatStickyPost[year]) {
      formatStickyPost[year] = {}
    }
    if (!Array.isArray(formatStickyPost[year]?.[month])) {
      formatStickyPost[year]![month] = []
    }
    formatStickyPost[year]![month]?.push(item)
  } else {
    formatPost[year]![month]?.push(item)
  }
})
---

<!doctype html>
<html lang='zh'>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style>
      @font-face {
        font-family: 'Ubuntu';
        src: url(/fonts/Ubuntu-Regular.woff2),
          url(/astro-blog/fonts/Ubuntu-Regular.woff2);
        font-weight: 400;
        font-style: normal;
        font-display: swap;
      }
      @font-face {
        font-family: 'Noto Sans SC';
        src: url(/fonts/NotoSansSC-Medium.woff2),
          url(/astro-blog/fonts/NotoSansSC-Medium.woff2);
        font-weight: 400;
        font-style: normal;
        font-display: swap;
      }
    </style>
    <style lang='scss'>
      /* Variables */
      $color-1: black;
      $color-2: white;
      $color-3: var(--theme1-color1);
      $line-left: 2em;

      body {
        margin: 0 auto;
        box-sizing: border-box;
        font-size: var(--font-size);
      }
      .content-wrapper {
        max-width: 68%;
      }
      ul {
        list-style: none;
        margin: 0;
        padding: 0;
      }
      main {
        padding-top: 3em;
        padding-left: 16%;

        section:nth-child(1) {
          margin-bottom: 2em;
        }
      }

      /* Styling */
      .timeline {
        font-size: 16px;
        margin: 1em auto 2em;
        position: relative;
        max-width: 100%;
        overflow: auto;

        &:before {
          background-color: $color-1;
          content: ' ';
          margin-left: -1px;
          position: absolute;
          top: 0;
          left: $line-left;
          width: 2px;
          height: 100%;
        }
      }

      .timeline-wrapper {
        position: relative;

        &:hover {
          .timeline-left-icon {
            transform: rotate(-45deg);
            background-color: $color-3;
          }

          .timeline-right-item-top-tip {
            box-shadow: inset 40em 0 0 0 $color-3;
          }
        }
      }

      .timeline-content-wrapper {
        position: relative;
        left: 4em;
        width: 80%;

        h3 {
          font-size: 1.75em;
        }

        h4 {
          font-size: 1.2em;
          margin-bottom: 0.5em;
        }

        strong {
          font-weight: 700;
        }

        .timeline-right-item {
          position: relative;
          > .timeline-right-item-content {
            position: relative;
            padding: 0.5em 0;
            transition: background-color 0.2s ease-in;

            > span {
              display: flex;
              align-items: center;
            }
            &:hover {
              background-color: var(--theme1-color4);
            }
            > h4 {
              margin: 0;
            }
            > p {
              margin: 0;
            }
            a {
              position: absolute;
              top: 0;
              right: 0;
              bottom: 0;
              left: 0;
            }
          }
          > .sticky-svg {
            position: absolute;
            top: 0;
            right: -1.5em;
            height: 1.5em;
            width: 1.5em;
            z-index: 3;
          }
        }
      }

      .timeline-left-icon {
        transition: transform 0.2s ease-in;
        transform: rotate(45deg);
        background-color: $color-1;
        outline: 10px solid $color-2;
        display: block;
        margin: 0.5em 0.5em 0.5em -0.5em;
        position: absolute;
        top: 0;
        left: $line-left;
        width: 1em;
        height: 1em;
      }

      .timeline-right-item-top-tip {
        $--padding-l-r: 0.2em;
        display: inline-block;
        min-width: 4em;
        height: 2em;
        line-height: 2em;
        padding: 0 $--padding-l-r;
        margin-top: 0;
        position: relative;
        transition: box-shadow 0.3s ease-in 0.1s;
        color: $color-2;
        background-color: $color-1;
        box-shadow: inset 0 0 0 0em var(--theme1-color3);
        .post-count {
          top: -0.5em;
          right: $--padding-l-r;
          position: absolute;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section>
        <h3>{ARCHIVE_TITLE}</h3>
      </section>
      <section class='content-wrapper'>
        {
          Object.keys(formatPost)
            .sort((a, b) => +b - +a)
            .map(year => {
              return (
                <>
                  <h4>{year}</h4>
                  <ul class='timeline'>
                    {Object.keys(formatPost[year] || {})
                      .sort((a, b) => +b - +a)
                      .map(month => {
                        formatPost[year]?.[month]?.sort(
                          (a, b) =>
                            b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
                        )
                        return (
                          <li class='timeline-wrapper'>
                            <label class='timeline-left-icon' />
                            <div class='timeline-content-wrapper'>
                              <p class='timeline-right-item-top-tip'>
                                {`${month} ${year}`}
                                <span class='post-count'>
                                  {(formatPost[year]?.[month]?.length || 0) +
                                    (formatStickyPost[year]?.[month]?.length ||
                                      0)}
                                </span>
                              </p>
                              {[
                                ...(formatStickyPost?.[year]?.[month]?.sort?.(
                                  (a, b) =>
                                    (a?.data?.sticky || 0) -
                                    (b?.data?.sticky || 0)
                                ) || []),
                                ...(formatPost?.[year]?.[month] || []),
                              ]?.map(item => {
                                return (
                                  <div class='timeline-right-item'>
                                    <div class='timeline-right-item-content'>
                                      <h4>{item.data.title}</h4>
                                      <p>{item.data.description}</p>
                                      <>
                                        {`${dayjs(item.data.pubDate).format(
                                          'YYYY年MM月D日'
                                        )} | ${Math.ceil(
                                          Math.ceil(
                                            getWordCount(item.body) / (5 * 60)
                                          )
                                        )}分钟 | ${getWordCount(item.body)}字${
                                          item.data.updatedDate
                                            ? ` | ${dayjs(
                                                item.data.updatedDate
                                              ).format('YYYY-MM-DD')}更新`
                                            : ''
                                        }`}
                                      </>
                                      <a
                                        href={`${baseUrl}${formatUrl(item)}`}
                                        aria-label={item.data.description}
                                      />
                                    </div>
                                    {typeof item?.data?.sticky === 'number' && (
                                      <svg
                                        class='sticky-svg'
                                        viewBox='0 0 1024 1024'
                                        version='1.1'
                                        xmlns='http://www.w3.org/2000/svg'
                                        p-id='5556'
                                        width='16'
                                        height='16'
                                      >
                                        <path
                                          d='M256 74.666667a53.333333 53.333333 0 1 0 0 106.666666h512a53.333333 53.333333 0 1 0 0-106.666666H256zM549.717333 260.949333a53.333333 53.333333 0 0 0-75.434666 0l-256 256a53.333333 53.333333 0 0 0 75.434666 75.434667l165.12-165.12V896a53.333333 53.333333 0 1 0 106.666667 0V427.605333l164.778667 164.778667a53.333333 53.333333 0 0 0 75.434666-75.434667l-256-256z'
                                          fill='#000000'
                                          p-id='5557'
                                        />
                                      </svg>
                                    )}
                                  </div>
                                )
                              })}
                            </div>
                          </li>
                        )
                      })}
                  </ul>
                </>
              )
            })
        }
      </section>
    </main>
    <Footer />
  </body>
</html>
